<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace에 연결할 인터페이스의 풀 경로를 작성해준다. -->
<mapper
	namespace="com.team.ecobuilders.KDH_member.dao.KDH_IMemberDAO">

	<!-- KDH_IMemberDAO의 추상메소드 loginMember 실행시 아래의 select문 실행 -->
	<!-- mybatis-config에서 alias를 주면 KDH_MemberDTO만 쓸 수 있음 -->
	<select id="loginMember" parameterType="KDH_MemberDTO"
		resultType="KDH_MemberDTO">
		SELECT
		mem_id
		, mem_password
		, mem_name
		, mem_phone
		, mem_address
		, mem_email
		, mem_date
		, mem_admin
		FROM
		members
		WHERE 1=1
		AND mem_id = #{memId}
	</select>

	<!-- 회원 리스트 불러오기 -->
	<select id="getMemList" resultType="KDH_MemberDTO">
		SELECT
		mem_id
		, mem_password
		, mem_name
		, mem_phone
		, mem_email
		, mem_admin
		, ROWNUM AS rnum
		FROM members
		ORDER BY rnum
	</select>

	<!-- 회원가입시 실행될 SQL문 -->
	<!-- 파라미터로 들어오는 KDH_MemberDTO에 대해 표기를 해주어야 한다 -->
	<!-- #{memId} 는 KDH_MemberDTO 의 필드변수 memId값을 꺼냄 -->
	<!-- memId=a001 이라면 #{memId} 는 'a001' 가 됨 (작은 따옴표가 자동으로 감싸짐) -->
	<!-- memId=a001 이라면 ${memId} 는 a001 가 됨 (작은 따옴표가 안감싸짐) -->
	<!-- 리턴타입이 기본타입(int)이면 resultType을 적지 않아도 됨 -->
	<insert id="insertMember"
		parameterType="com.team.ecobuilders.KDH_member.dto.KDH_MemberDTO">
		INSERT INTO members (
		mem_id
		, mem_password
		, mem_name
		, mem_phone
		, mem_address
		, mem_email
		, mem_date
		, mem_admin
		) VALUES (
		#{memId}
		, #{memPassword}
		, #{memName}
		, #{memPhone}
		, #{memAddress}
		, #{memEmail}
		, #{memDate,jdbcType=TIMESTAMP}
		, #{memAdmin}
		)
	</insert>

	<!-- KDH_MemberDTO 내에 memPassword가 채워져있거나, 비어있음 -->
	<!-- 채워져있다면 update 쿼리문에 , mem_password = #{memPassword} 추가 -->
	<!-- mybatis의 if문을 이용하여 동적 쿼리문을 생성할 수 있다. -->
	<update id="updateMember" parameterType="KDH_MemberDTO">
		UPDATE members
		SET mem_name = #{memName}
		, mem_phone = #{memPhone}
		, mem_address = #{memAddress}
		, mem_email = #{memEmail}
		, mem_date = SYSDATE
		, mem_admin = '1'
		<if test="memPassword.isEmpty() == false">
			, mem_password = #{memPassword}
		</if>
		WHERE mem_id = #{memId}
			
	</update>


	<select id="getMember" parameterType="String"
		resultType="KDH_MemberDTO">
		SELECT
		mem_id
		, mem_password
		, mem_name
		, mem_phone
		, mem_address
		, mem_email
		, mem_date
		, mem_admin
		FROM
		members
		WHERE 1=1
		AND mem_id = #{memId}
	</select>


	<delete id="deleteMember" parameterType="String">
		DELETE FROM members
		WHERE mem_id = #{memId}
	</delete>

</mapper>